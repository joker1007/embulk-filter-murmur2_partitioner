plugins {
    id "com.jfrog.bintray" version "1.8.5"
    id "org.embulk.embulk-plugins" version "0.4.2"
    id "java"
    id "checkstyle"
}

repositories {
    mavenCentral()
    jcenter()
}

group = "org.embulk.filter.murmur2_partitioner"
version = "0.1.0"
description = "Murmur2 Partitioner filter plugin for Embulk"

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compileOnly "org.embulk:embulk-core:0.9.23"

    compile("org.apache.kafka:kafka-clients:2.5.0") {
        exclude group: "org.slf4j", module: "slf4j-api"
    }
    testCompile "junit:junit:4.+"

    testCompile "org.embulk:embulk-core:0.9.23:tests"
    testCompile "org.embulk:embulk-test:0.9.23"
    testCompile "org.embulk:embulk-standards:0.9.23"
    testCompile "org.embulk:embulk-deps-buffer:0.9.23"
    testCompile "org.embulk:embulk-deps-config:0.9.23"

    testCompile("com.salesforce.kafka.test:kafka-junit4:3.+")
    testCompile "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.6.7"
    testCompile "com.fasterxml.jackson.module:jackson-module-paranamer:2.6.7"
    testCompile("org.apache.kafka:kafka_2.12:2.5.+") {
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-databind"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-annotations"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
        exclude group: "com.fasterxml.jackson.dataformat", module: "jackson-dataformat-csv"
        exclude group: "com.fasterxml.jackson.datatype", module: "jackson-datatype-jdk8"
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-scala_2.12"
        exclude group: "com.fasterxml.jackson.module", module: "jackson-module-paranamer"
    }
}

embulkPlugin {
    mainClass = "org.embulk.filter.murmur2_partitioner.Murmur2PartitionerFilterPlugin"
    category = "filter"
    type = "murmur2_partitioner"
}

test {
    minHeapSize = "512m"
    maxHeapSize = "4g"
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    toolVersion = '6.14.1'
}
checkstyleMain {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
checkstyleTest {
    configFile = file("${project.rootDir}/config/checkstyle/default.xml")
    ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
    classpath = sourceSets.main.output + sourceSets.test.output
    source = sourceSets.main.allJava + sourceSets.test.allJava
}

gem {
    from("LICENSE.txt")
    authors = [ "joker1007" ]
    email = [ "kakyoin.hierophant@gmail.com" ]
    description = "Murmur2 Partitioner filter plugin for Embulk"
    summary = "Murmur2 Partitioner filter plugin for Embulk"
    homepage = "https://github.com/joker1007/embulk-filter-murmur2_partitioner"
    licenses = [ "MIT" ]
}

gemPush {
    host = "https://rubygems.org"
}
